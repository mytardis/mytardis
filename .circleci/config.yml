# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.5.9-stretch

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and install prerequisites
      - run:
          name: install prerequisites
          command: |
              sudo apt-get update -yqq
              sudo apt-get -yqq install --no-install-recommends -o=Dpkg::Use-Pty=0 \
                libldap2-dev libsasl2-dev libmagic-dev libmagickwand-dev \
                libssl-dev libxml2-dev libxslt1-dev zlib1g-dev \
                libfreetype6-dev libjpeg-dev

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-base.txt" }}-{{ checksum "requirements-test.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -Ur requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-base.txt" }}-{{ checksum "requirements-test.txt" }}

      # Run tests!
      # Set DOCKER_BUILD environment variable, used by
      # tardis/tardis_portal/tests/test_tar_download.py
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            mkdir -p var/store
            python test.py
          environment:
            DOCKER_BUILD: 'true'
      - store_artifacts:
          path: test-reports
          destination: test-reports
