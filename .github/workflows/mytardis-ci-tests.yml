name: MyTardis CI tests
on: [push, pull_request]

jobs:
  build-docker:
    runs-on: ubuntu-20.04

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build test docker image
        run: docker-compose -f docker-ci/docker-build.yml run builder
      - name: save image
        run: docker save mytardis/mytardis-base > /tmp/base-image.tar
      - name: upload base image
        uses: actions/upload-artifact@v2
        with:
          name: base-image
          path: /tmp/base-image.tar
      - name: upload wheelhouse
        uses: actions/upload-artifact@v2
        with:
          name: wheelhouse
          path: wheelhouse

  test-on-sqlite:
    runs-on: ubuntu-20.04
    needs: build-docker
    services:
      es:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          discovery.type: single-node
        ports:
          - 9200:9200
          - 9300:9300
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Download base-image
        uses: actions/download-artifact@v2
        with:
          name: base-image
          path: /tmp
      - name: load image
        run: docker load < /tmp/base-image.tar
      - name: list images
        run: docker image ls -a
      - name: download wheelhouse
        uses: actions/download-artifact@v2
        with:
          name: wheelhouse
          path: wheelhouse
      - name: run test
        run: |
          docker-compose -f docker-ci/docker-test.yml run -e TEST_TYPE=memory \
              -e CODACY_PROJECT_TOKEN=$CODACY_PROJECT_TOKEN \
              -e COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN \
              -e CI_NAME=SemaphoreCI -e CI_BUILD_NUMBER=$SEMAPHORE_BUILD_NUMBER \
              -e CI_BRANCH=$BRANCH_NAME -e PULL_REQUEST_NUMBER=$PULL_REQUEST_NUMBER \
              test
  test-on-postgres:
    runs-on: ubuntu-20.04
    needs: build-docker
    services:
      pg:
        image: postgres:9.6
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Download base-image
        uses: actions/download-artifact@v2
        with:
          name: base-image
          path: /tmp
      - name: load image
        run: docker load < /tmp/base-image.tar
      - name: list images
        run: docker image ls -a
      - name: download wheelhouse
        uses: actions/download-artifact@v2
        with:
          name: wheelhouse
          path: wheelhouse
      - name: run test
        run: |
          docker-compose -f docker-ci/docker-test.yml run -e TEST_TYPE=pg test

